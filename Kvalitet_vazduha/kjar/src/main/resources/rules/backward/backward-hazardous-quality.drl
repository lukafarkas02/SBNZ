package rules.backward

import java.util.Arrays;
import java.util.List;

import com.ftn.model.AirPollutionEvent;
import com.ftn.model.AirQualityStatus;
import com.ftn.model.AirQualityCategory;
import com.ftn.model.UserProfile;
import com.ftn.model.UserCategory;
import com.ftn.model.*;
import com.ftn.dto.*;

// =====================================================================
declare HypothesisDependency
    conclusion     : String
    prerequisites  : java.util.List
end

// =====================================================================
// Inicijalizacija stabla zavisnosti za "Opasan vazduh" i preporuke
// Root hipoteza: "IssueAlertOpasan" (izdati upozorenje: OPASAN)
// Slojevi niže: kombinacije polutanata + vremenskih uslova + profila
// =====================================================================
rule "Init dependencies for Air Quality backward"
salience 100
when
    not( HypothesisDependency() )
then
    System.out.println(">> Init backward dependencies for Air Quality...");

    // --- ROOT: izdati upozorenje (opasan) ---
    // tražimo: (SeverePollution OR MultiPollutantHigh) AND (UnfavorableWeather) 
    // i po mogućnosti SensitiveUser za jače preporuke
    insert( new HypothesisDependency( "IssueAlertHazardous", Arrays.asList("OverallStatusHazardous", "UnfavorableWeather")) );

    // Za personalizovanu eskalaciju: root+SensitiveUser => "StrongProtectAdvice"
    insert( new HypothesisDependency( "StrongProtectAdvice", Arrays.asList("IssueAlertHazardous", "SensitiveUser") ) );

    // --- “Opasan” status izvođen iz polutanata ---
    insert( new HypothesisDependency( "OverallStatusHazardous", Arrays.asList("SeverePollution") ) );

    // Jedan jako visok polutant dovoljan
    insert( new HypothesisDependency( "SeverePollution", Arrays.asList("PM25_Hazardous_OR_PM10_Hazardous_OR_NO2_Hazardous_OR_O3_Hazardous") ) );

    // Vremenski uslovi koji pogoršavaju disperziju
    insert( new HypothesisDependency( "UnfavorableWeather",  Arrays.asList("LowWind_OR_NoPrecip") ) );

    // --- Sensitive user (profil) ---
    insert( new HypothesisDependency( "SensitiveUser", Arrays.asList("IsChild_OR_Elderly_OR_Chronic_OR_Pregnant") ) );
end

// =====================================================================
// REKURZIVNA PROVERA: bazni dokazi su direktno iz činjenica (fakta)
// ili se hipoteza dokazuje tako što su sve njene pretpostavke dokazane.
// =====================================================================
query proveHypothesis(String $h)
    // -------------------- Bazni (atomarni) uslovi --------------------
    // POLUTANTI – pragovi iz specifikacije (PM2.5 / PM10 ± ekvivalenti)
    (
        // PM2.5
        ( eval($h.equals("PM25_Hazardous")) and exists AirPollutionEvent( pm25 > 55 ) ) or
        ( eval($h.equals("PM25_Poor"))    and exists AirPollutionEvent( pm25 > 35, pm25 <= 55 ) ) or
        ( eval($h.equals("PM25_Moderate")) and exists AirPollutionEvent( pm25 > 15, pm25 <= 35 ) ) or
        ( eval($h.equals("PM25_Good"))  and exists AirPollutionEvent( pm25 <= 15 ) ) or

        // PM10
        ( eval($h.equals("PM10_Hazardous")) and exists AirPollutionEvent( pm10 > 100 ) ) or
        ( eval($h.equals("PM10_Poor"))    and exists AirPollutionEvent( pm10 > 50,  pm10 <= 100 ) ) or
        ( eval($h.equals("PM10_Moderate")) and exists AirPollutionEvent( pm10 > 25,  pm10 <= 50 ) ) or
        ( eval($h.equals("PM10_Good"))  and exists AirPollutionEvent( pm10 <= 25 ) ) or

        // NO2
        ( eval($h.equals("NO2_Hazardous"))  and exists AirPollutionEvent( no2 > 180 ) ) or
        ( eval($h.equals("NO2_Poor"))  and exists AirPollutionEvent( no2 > 90, no2 <= 180 ) ) or
        ( eval($h.equals("NO2_Moderate"))  and exists AirPollutionEvent( no2 > 40, no2 <= 90  ) ) or
        ( eval($h.equals("NO2_Good"))  and exists AirPollutionEvent( no2 <= 40 ) ) or

        // O3
        ( eval($h.equals("O3_Hazardous"))   and exists AirPollutionEvent( o3  > 180 ) ) or
        ( eval($h.equals("O3_Poor"))   and exists AirPollutionEvent( o3  > 140, o3 <= 180 ) ) or
        ( eval($h.equals("O3_Moderate"))   and exists AirPollutionEvent( o3  > 100, o3 <=  140 ) ) or
        ( eval($h.equals("O3_Good"))   and exists AirPollutionEvent( o3  <= 100 ) ) or

        // Agregati baznih polutanata kao “OR” čvorovi
        ( eval($h.equals("PM25_Hazardous_OR_PM10_Hazardous_OR_NO2_Hazardous_OR_O3_Hazardous"))
              and ( exists AirPollutionEvent( pm25 > 55 ) 
                 or exists AirPollutionEvent( pm10 > 100 )
                 or exists AirPollutionEvent( no2  > 200 )
                 or exists AirPollutionEvent( o3   > 180 ) ) ) or

        // Vreme
        ( eval($h.equals("LowWind"))     and exists AirPollutionEvent( windSpeed < 1.5 ) ) or
        ( eval($h.equals("NoPrecip"))    and exists AirPollutionEvent( precipitation == false ) ) or
        ( eval($h.equals("LowWind_OR_NoPrecip"))
              and ( exists AirPollutionEvent( windSpeed < 1.5 )
                 or exists AirPollutionEvent( precipitation == false ) ) ) or

        // Profil korisnika (oslanja se na tvoju klasu UserProfile/UserCategory)
        ( eval($h.equals("IsChild"))     and exists User( riskType == RiskType.CHILD ) ) or
        ( eval($h.equals("IsElderly"))   and exists User( riskType == RiskType.ELDERLY ) ) or
        ( eval($h.equals("IsChronic"))   and exists User( riskType == RiskType.CHRONIC ) ) or
        ( eval($h.equals("IsPregnant"))  and exists User( riskType == RiskType.PREGNANT ) ) or
        ( eval($h.equals("IsChild_OR_Elderly_OR_Chronic_OR_Pregnant"))
              and exists User( riskType in (RiskType.CHILD, RiskType.ELDERLY, RiskType.CHRONIC, RiskType.PREGNANT) ) )
    )
    or
    // -------------------- Rekurzivni korak ---------------------------
    (
        $z : HypothesisDependency( conclusion == $h )
        and not(
            String($p: this) from $z.prerequisites
            and
            not proveHypothesis($p;)
        )
    )
end

// =====================================================================
// Završna pravila: kad se hipoteze dokažu, upiši status + objašnjenje
// =====================================================================

// OPASAN – opšte upozorenje
rule "Confirm OPASAN via backward reasoning"
salience 10
no-loop true
when
    proveHypothesis("IssueAlertHazardous";)
    // $status : AirQualityStatus()
    $result : BackwardReasoningResult()
then
    System.out.println(">> OPASAN (backward): visoki polutanti + nepovoljno vreme");
    // $status.setCategory(AirQualityCategory.OPASAN);
    $result.setHazardous(true);
    $result.setExplanation(">> HAZARDOUS: high pollutants + unfavorable weather");
    // $status.setExplanation("Dokazano rekurzivno: (SeverePollution OR MultiPollutantHigh) i nepovoljno vreme.");
    // $status.setRecommendation("Ostanite u zatvorenom; koristite P2/P3 maske; izbegavajte napor napolju.");
    // update($status);
end

// OPASAN + rizične grupe – jača poruka
rule "Personalized strong advice for sensitive users"
salience 9
no-loop true
when
    proveHypothesis("StrongProtectAdvice";)
    $result : BackwardReasoningResult()
    // $status : AirQualityStatus( category == AirQualityCategory.OPASAN )
then
    System.out.println(">> OPASAN (sensitive): posebne preporuke");
    $result.setStrongProtectAdvice(true);
    $result.setRecommendation("Especially for risk groups: avoid going out; consult a doctor if symptoms occur.");
    // $status.setRecommendation($status.getRecommendation() + " Posebno za rizične grupe: izbegavati izlazak; konsultovati lekara ako se jave simptomi.");
    // update($status);
end
